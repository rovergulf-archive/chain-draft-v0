syntax = "proto3";
package rovergulf.proto.rbn.v1;
option go_package = "github.com/rovergulf/rbn/rpc";

service NodeService {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc RpcCall(CallRequest) returns (CallResponse);
}

// this is standard definition from: https://github.com/grpc/grpc/blob/v1.39.x/doc/health-checking.md
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

message CallRequest {
  enum Command {
    NIL = 0;
    SYNC_PEERS = 1;
    SYNC_GEN = 2;
    SYNC_STATE = 3;
    SYNC_BLOCKS = 4;
    TX_ADD = 7;
    TX_GET = 8;
  }
  Command cmd = 1;
  bytes data = 2;
}

message CallResponse {
  int32 status = 1;
  bytes data = 2;
}

message Node {
  string address = 1;
  string ip = 2;
  int32 port = 3;
  string node_id = 4;
}
