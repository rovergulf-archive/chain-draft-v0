syntax = "proto3";
package rovergulf.proto.rbn.v1;
option go_package = "github.com/rovergulf/rbn/proto";

service NodeService {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc RpcCall(CallRequest) returns (CallResponse);
}

// this is standard definition from: https://github.com/grpc/grpc/blob/v1.39.x/doc/health-checking.md
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

enum Command {
  NoOp = 0;
  Sync = 1;
  Add = 2;
  Get = 3;
  List = 4;
  Verify = 5;
  Drop = 6;
}

enum Entity {
  Unknown = 0;
  Genesis = 1;
  Balance = 2;
  Transaction = 3;
  Block = 4;
  BlockHeader = 5;
  State = 6;
  Peer = 7;
}

message CallRequest {
  Command cmd = 1;
  Entity entity = 2;
  bytes data = 3;
}

message CallResponse {
  int32 status = 1;
  bytes data = 2;
}

message Node {
  string address = 1;
  string ip = 2;
  int32 port = 3;
  string node_id = 4;
}
